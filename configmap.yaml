apiVersion: v1
kind: ConfigMap
metadata:
  name: localstack-config
  namespace: localstack
data:
  init-aws.sh: |
    #!/bin/bash
    set -e
    
    echo "Waiting for LocalStack to be ready..."
    while ! curl -s http://localstack.localstack.svc.cluster.local:4566/_localstack/health > /dev/null; do
      sleep 2
    done
    echo "LocalStack is ready!"
    
    # Create S3 buckets for ByteFreezer services
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-data || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-config || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-logs || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-artifacts || true
    
    # Create SQS queues for ByteFreezer services
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sqs create-queue --queue-name bytefreezer-events || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sqs create-queue --queue-name bytefreezer-dlq || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sqs create-queue --queue-name bytefreezer-processing || true
    
    # Create SNS topics for ByteFreezer services
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sns create-topic --name bytefreezer-alerts || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sns create-topic --name bytefreezer-notifications || true

    # Create PostgreSQL RDS instance for ByteFreezer
    echo "Creating PostgreSQL RDS instance..."
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 rds create-db-instance \
      --db-instance-identifier bytefreezer-postgres \
      --db-instance-class db.t3.micro \
      --engine postgres \
      --master-username bytefreezer \
      --master-user-password bytefreezer123 \
      --allocated-storage 20 \
      --db-name bytefreezer \
      --port 5432 || true

    echo "Waiting for PostgreSQL RDS instance to be available..."
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 rds wait db-instance-available \
      --db-instance-identifier bytefreezer-postgres || true

    echo "LocalStack initialization complete!"
  
  aws-config: |
    [default]
    region = us-east-1
    output = json
  
  aws-credentials: |
    [default]
    aws_access_key_id = test
    aws_secret_access_key = test