apiVersion: v1
kind: ConfigMap
metadata:
  name: localstack-config
  namespace: localstack
data:
  init-aws.sh: |
    #!/bin/bash
    set -e
    
    echo "Waiting for LocalStack to be ready..."
    while ! curl -s http://localstack.localstack.svc.cluster.local:4566/_localstack/health > /dev/null; do
      sleep 2
    done
    echo "LocalStack is ready!"
    
    # Create S3 buckets for ByteFreezer services
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-data || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-config || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-logs || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 s3 mb s3://bytefreezer-artifacts || true
    
    # Create SQS queues for ByteFreezer services
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sqs create-queue --queue-name bytefreezer-events || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sqs create-queue --queue-name bytefreezer-dlq || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sqs create-queue --queue-name bytefreezer-processing || true
    
    # Create SNS topics for ByteFreezer services
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sns create-topic --name bytefreezer-alerts || true
    aws --endpoint-url=http://localstack.localstack.svc.cluster.local:4566 sns create-topic --name bytefreezer-notifications || true
    
    echo "LocalStack initialization complete!"
  
  aws-config: |
    [default]
    region = us-east-1
    output = json
  
  aws-credentials: |
    [default]
    aws_access_key_id = test
    aws_secret_access_key = test