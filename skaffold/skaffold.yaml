apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: bytefreezer-dev

# Build configuration for ByteFreezer services
build:
  artifacts:
  - image: bytefreezer/proxy
    context: ../bytefreezer-proxy
    docker:
      dockerfile: Dockerfile
      buildArgs:
        GO_VERSION: "1.21"
    sync:
      manual:
      - src: "**/*.go"
        dest: /app
      - src: "go.mod"
        dest: /app
      - src: "go.sum" 
        dest: /app

  - image: bytefreezer/receiver
    context: ../bytefreezer-receiver
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.go"
        dest: /app

  - image: bytefreezer/piper
    context: ../bytefreezer-piper  
    docker:
      dockerfile: Dockerfile
    sync:
      manual:
      - src: "**/*.go"
        dest: /app

  tagPolicy:
    envTemplate:
      template: "{{.IMAGE_NAME}}:dev-{{.USER}}-{{.GIT_COMMIT_SHORT}}"

# Deployment configuration
manifests:
  helm:
    releases:
    - name: localstack
      chartPath: ../helm-chart/localstack
      valuesFiles:
      - ../helm-chart/localstack/values-dev.yaml
      setValues:
        service.development.enabled: true
        initJob.resources.s3Buckets: "{bytefreezer-dev-data,bytefreezer-dev-config,bytefreezer-test-bucket}"
      namespace: localstack
      createNamespace: true
      
    - name: bytefreezer-services
      chartPath: ./charts/bytefreezer-services
      valuesFiles:
      - ./charts/bytefreezer-services/values-dev.yaml
      setValueTemplates:
        proxy.image.repository: bytefreezer/proxy
        proxy.image.tag: "dev-{{.USER}}-{{.GIT_COMMIT_SHORT}}"
        receiver.image.repository: bytefreezer/receiver
        receiver.image.tag: "dev-{{.USER}}-{{.GIT_COMMIT_SHORT}}"
        piper.image.repository: bytefreezer/piper
        piper.image.tag: "dev-{{.USER}}-{{.GIT_COMMIT_SHORT}}"
      namespace: bytefreezer-dev
      createNamespace: true

# Development configuration
deploy:
  helm: {}
  statusCheckDeadlineSeconds: 300
  kubeContext: ""  # Use current context

# Port forwarding for development
portForward:
- resourceType: service
  resourceName: localstack-internal
  namespace: localstack
  port: 4566
  localPort: 4566
  
- resourceType: service
  resourceName: bytefreezer-proxy
  namespace: bytefreezer-dev
  port: 8080
  localPort: 8080

- resourceType: service
  resourceName: bytefreezer-receiver
  namespace: bytefreezer-dev
  port: 3000
  localPort: 3000

- resourceType: service
  resourceName: bytefreezer-piper
  namespace: bytefreezer-dev
  port: 4000
  localPort: 4000

# Test configuration
test:
- image: bytefreezer/proxy
  custom:
  - command: ["go", "test", "./..."]
    timeoutSeconds: 300
    dependencies:
      paths: ["**/*.go", "go.mod", "go.sum"]

- image: bytefreezer/receiver  
  custom:
  - command: ["go", "test", "./..."]
    timeoutSeconds: 300

# File watcher for live reload
fileSyncMode: infer

# Profiles for different environments
profiles:
- name: production
  patches:
  - op: replace
    path: /manifests/helm/releases/0/valuesFiles
    value:
    - ../helm-chart/localstack/values-prod.yaml
  - op: add
    path: /manifests/helm/releases/0/setValues/metallb.addressPool.addresses
    value: ["192.168.1.240-192.168.1.249"]

- name: integration-test
  patches:
  - op: add
    path: /test
    value:
    - image: amazon/aws-cli
      custom:
      - command: ["./scripts/integration-tests.sh"]
        timeoutSeconds: 600

- name: minimal
  patches:
  - op: remove
    path: /build/artifacts/2  # Remove piper
  - op: remove 
    path: /portForward/3      # Remove piper port forward

# Custom hooks
verify:
- name: localstack-health
  container:
    name: health-check
    image: curlimages/curl:latest
    command: ["curl", "-f", "http://localstack-internal.localstack.svc.cluster.local:4566/_localstack/health"]

# Environment variables
env:
- name: SKAFFOLD_NAMESPACE
  value: bytefreezer-dev
- name: AWS_ENDPOINT_URL
  value: "http://localhost:4566"  # Port-forwarded LocalStack
- name: AWS_ACCESS_KEY_ID
  value: "test"
- name: AWS_SECRET_ACCESS_KEY
  value: "test"
- name: AWS_DEFAULT_REGION  
  value: "us-east-1"